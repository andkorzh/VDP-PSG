{
	"info":
	{
		"descr": "JSON contains all the information about the PSG cells.",
		"url": "https://github.com/emu-russia/VDP-PSG/blob/main/cells.md"
	},

	"map":
	{
		"row_names": [ "A", "B", "C", "D", "E", "F", "G", "H" ],
		"rows":
		[
			[
				"not", "nand", "nand", "comp_weak", "comp_weak", "comp_weak",
				"nand3", "nand3", "nand3", "nand3", "nand3", "nand3", "nand3", "nand3", 
				"not", "nand", "nand", "comp_weak", "comp_weak", "comp_weak", 
				"nand3", "nand3", "nand3", "nand3", "nand3", "nand3", "nand3", "nand3", 
				"not", "nand", "nand", "comp_weak", "comp_weak", "comp_weak", 
				"nand3", "nand3", "nand3", "nand3", "nand3", "nand3", "nand3", "nand3", 
				"not", "nand", "nand", "comp_weak", "comp_weak", "comp_weak", 
				"nand3", "nand3", "nand3", "nand3", "nand3", "nand3", "nand3", "nand3"
			],

			[
				"notif0", "or", "dlatch", "notif0", "or", "dlatch", "notif0", "or", "dlatch", "notif0", "or", "dlatch", "comp_strong",
				"notif0", "or", "dlatch", "notif0", "or", "dlatch", "notif0", "or", "dlatch", "notif0", "or", "dlatch", "comp_strong",
				"notif0", "or", "dlatch", "notif0", "or", "dlatch", "notif0", "or", "dlatch", "notif0", "or", "dlatch", "comp_strong",
				"notif0", "or", "dlatch", "notif0", "or", "dlatch", "notif0", "or", "dlatch", "notif0", "or", "dlatch", "comp_strong", "not_strong"
			],

			[
				"dlatch", "or", "or", "comp_strong", "dlatch", "or", "dlatch", "dlatch", "or", "dlatch", "dlatch", "or", "dlatch", "dlatch", "or", "or", "not",
				"dlatch", "or", "or", "dlatch", "or", "or", "dlatch", "or", "or", "comp_strong",
				"not", "aoi21", "and3", "not", "aoi21", "and3", "or", "not", "or", "or", "not", "aoi21", "and3", "or", "or",
				"not", "aoi21", "and3", "not", "aoi21", "and3", "or", "or", "not", "aoi21", "and3",
				"and3", "aoi21", "not", "and3", "aoi21", "not", "not", "not", "not", "not", "not", "nand", "nand", "nand", "nand"
			],

			[
				"dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch",
				"comp_strong", "comp_strong", "comp_strong",
				"dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch", "dlatch",
				"comp_strong", "comp_strong", "comp_strong",
				"or", "or", "or", "or", "dlatch", "dlatch", "dlatch", "comp_strong"
			],

			[
				"aon2222", "cgi2a", "aon2222", "cgi2a", "aon2222", "cgi2a", "aon2222", "cgi2a", "aon2222", "cgi2a", "aon2222", "cgi2a", "aon2222", "cgi2a", "aon2222", "cgi2a", "aon2222", "cgi2a", "aon2222", "cgi2a",
				"not", "nand", "sr_bit", "not", "nand", "sr_bit", "not", "nand", "sr_bit", "not", "nand", "sr_bit", "nand3", "not", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit"
			],

			[
				"sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit",
				"sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit",
				"sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit",
				"sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit", "sr_bit",
				"nand", "or", "cnt_bit", "or", "cnt_bit", "or", "cnt_bit", "or", "cnt_bit", "nand3", "nand3", "not"
			],

			[
				"or", "ha", "or", "ha", "or", "ha", "or", "ha", "or", "ha", "or", "ha", "or", "ha", "or", "ha", "or", "ha", "or", "ha",
				"xor",
				"lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit", "lfsr_bit",
				"nand", "nand", "nand3"
			],

			[
				"not", "clkgen", "dff",
				"sr_bit", "not", "or", "nand", "sr_bit", "cnt_bit", "slatch_inv", "not", "nand",
				"buf", "not", "buf", "nand", "not", "buf", "buf", 
				"rs", "nand", "dff", "sr_bit", "dff", "not", "not_strong", "nand3",
				"rs", "dff", "nand", "not", "nand", "not_strong", "not_strong", "nand", "nand3", "or", "not", "sr_bit", "aon22",
				"not", "nand", "or", "not", "nand", "or", "not", "nand", "or", "nand", "or"
			]
		],
		"gval":
		[
			[
				"e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", 
				"e", "e", "e", "e", "e", "e", 
				"e", "e", "e", "e", "e", "e", "e", "e", 
				"e", "e", "e", "e", "e", "e", 
				"e", "e", "e", "e", "e", "e", "e", "e", 
				"e", "e", "e", "e", "e", "e", 
				"e", "e", "e", "e", "e", "e", "e", "e"
			],

			[
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e"
			],

			[
				"r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r",
				"r", "r", "r", "r", "r", "r", "r", "r", "r", "r",
				"r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r",
				"r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r",
				"r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r"
			],

			[
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e"
			],

			[
				"r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r",
				"r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r"
			],

			[
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e"
			],

			[
				"r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r",
				"r",
				"r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r",
				"r", "r", "r"
			],

			[
				"e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", 
				"e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
				"e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e"
			]
		]
	},

	"cells":
	{
		"not":
		{
			"type": "CellNot"
		},

		"nand":
		{
			"type": "CellLogic"
		},

		"nor":
		{
			"type": "CellLogic"
		},

		"comp_weak":
		{
			"notes": "Слабый комплементарный буфер",
			"type": "CellBuffer"
		},

		"nand3":
		{
			"type": "CellLogic"
		},

		"nor3":
		{
			"type": "CellLogic"
		},

		"dlatch":
		{
			"type": "CellLatch"
		},

		"comp_strong":
		{
			"notes": "Поскольку шнуровка для комплемента находится снаружи ячеек, для превращения одиночного `Enable` в два комплементарных сигнала используется этот комплементарный буфер.",
			"type": "CellBuffer"
		},

		"or":
		{
			"notes": "чел",
			"type": "CellLogic"
		},

		"and":
		{
			"type": "CellLogic"
		},

		"notif0":
		{
			"type": "CellBusSupp"
		},

		"cgi2a":
		{
			"notes": "Генератор переноса инвертирующий с одним инверсным входом",
			"type": "CellAdder"
		},

		"sr_bit":
		{
			"type": "CellLatch"
		},

		"dff":
		{
			"notes": "ещё такая",
			"type": "CellFlipFlop"
		},

		"lfsr_bit":
		{
			"notes": "Используется для шумового канала. Ячейка представляет собой регистр сдвига с обратной связью. Выход замешивается на вход с тремя дополнительными замесами через операцию aoi.",
			"type": "CellLatch"
		},

		"buf":
		{
			"notes": "Обычный супер-буфер",
			"type": "CellBuffer"
		},

		"clkgen":
		{
			"notes": "Расщепитель одиночной фазы CLK на 4 комплемента (CLK Distribution).",
			"type": "CellOther"
		},

		"aoi21":
		{
			"notes": "2-AND into 2-NOR gate",
			"type": "CellLogic"
		},

		"oai21":
		{
			"notes": "2-OR into 2-NAND gate",
			"type": "CellLogic"
		},		

		"and3":
		{
			"notes": "длинный чел",
			"type": "CellLogic"
		},

		"or3":
		{
			"type": "CellLogic"
		},

		"cnt_bit":
		{
			"notes": "Разряд счётчика. В PSG carry_out не используется, т.к. все счётчики 1-разрядные.",
			"type": "CellAdder"
		},

		"aon22":
		{
			"notes": "В единственном экземпляре в правом нижнем углу.",
			"type": "CellLogic"
		},

		"not_strong":
		{
			"notes": "Используется два спаренных инвертора для дополнительного драйва сигнала.",
			"type": "CellNot"
		},

		"ha":
		{
			"notes": "Half Adder. Встречается в ряду G.",
			"type": "CellAdder"
		},

		"xor":
		{
			"notes": "В единственном экземпляре, по середине ряда G.",
			"type": "CellLogic"
		},

		"slatch_inv":
		{
			"notes": "Значение хранится на затворе выходного инвертора. Вход Enable в комплементарной логике (\"dual-rails\").",
			"type": "CellLatch"
		},

		"rs":
		{
			"notes": "В двух экземплярах, ряд H.",
			"type": "CellFlipFlop"
		},

		"aon2222":
		{
			"notes": "Раньше входила в cgi2a, после разбора стало понятно что это отдельная ячейка.",
			"type": "CellLogic"
		}
	}
}
